{"version":3,"sources":["Login.tsx","Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Login","_ref","onLoginSuccess","username","setUsername","useState","password","setPassword","error","setError","navigate","useNavigate","React","createElement","className","onSubmit","event","preventDefault","type","value","onChange","e","target","required","users","id","name","age","gender","Dashboard","searchTerm","setSearchTerm","minAge","setMinAge","maxAge","setMaxAge","filterGender","setFilterGender","filteredUsers","filter","user","nameMatch","toLowerCase","includes","ageMatch","genderMatch","placeholder","min","max","Number","length","map","key","App","isLoggedIn","setIsLoggedIn","Router","Routes","Route","path","element","handleLoginSuccess","Navigate","to","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.8b3a356b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\n\ninterface LoginProps {\n  onLoginSuccess: () => void;\n}\n\nconst Login: React.FC<LoginProps> = ({ onLoginSuccess }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  \n  const navigate = useNavigate(); // Use React Router's navigation\n\n  // Mock credentials\n  const mockUsername = \"user\";\n  const mockPassword = \"p@ssword\";\n\n  const handleLogin = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();  // Prevent page refresh\n\n    // Check if the credentials are valid\n    if (username === mockUsername && password === mockPassword) {\n      onLoginSuccess();  // Set login state in App component\n      setError('');\n      navigate('/dashboard');  // Navigate to the dashboard after successful login\n    } else {\n      setError('Invalid username or password');  // Show error message\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h2>Welcome</h2>\n      {error && <p className=\"error\">{error}</p>}\n      <form onSubmit={handleLogin}>\n        <div>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n\n","import React, { useState } from 'react';\nimport './Dashboard.css'; // External CSS file for better styling\n\nconst users = [\n    { id: 1, name: 'Alice', age: 25, gender: 'Female' },\n    { id: 2, name: 'Bob', age: 30, gender: 'Male' },\n    { id: 3, name: 'Charlie', age: 35, gender: 'Male' },\n    { id: 4, name: 'Daisy', age: 24, gender: 'Female' },\n    { id: 5, name: 'Eve', age: 28, gender: 'Female' },\n    { id: 6, name: 'Frank', age: 32, gender: 'Male' },\n    { id: 7, name: 'Grace', age: 29, gender: 'Female' },\n    { id: 8, name: 'Hank', age: 38, gender: 'Male' },\n    { id: 9, name: 'Ivy', age: 26, gender: 'Female' },\n    { id: 10, name: 'Jack', age: 33, gender: 'Male' },\n    { id: 11, name: 'Karen', age: 27, gender: 'Female' },\n    { id: 12, name: 'Leo', age: 40, gender: 'Male' },\n    { id: 13, name: 'Mia', age: 22, gender: 'Female' },\n    { id: 14, name: 'Nick', age: 31, gender: 'Male' },\n    { id: 15, name: 'Olivia', age: 35, gender: 'Female' },\n    { id: 16, name: 'Paul', age: 28, gender: 'Male' },\n    { id: 17, name: 'Quinn', age: 23, gender: 'Female' },\n    { id: 18, name: 'Ralph', age: 36, gender: 'Male' },\n    { id: 19, name: 'Sophia', age: 21, gender: 'Female' },\n    { id: 20, name: 'Tom', age: 34, gender: 'Male' },\n];\n\n\nconst MIN_AGE = 18;\nconst MAX_AGE = 45;\n\nconst Dashboard: React.FC = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [minAge, setMinAge] = useState(MIN_AGE);\n    const [maxAge, setMaxAge] = useState(MAX_AGE);\n    const [filterGender, setFilterGender] = useState('');\n\n    const filteredUsers = users.filter(user => {\n        const nameMatch = user.name.toLowerCase().includes(searchTerm.toLowerCase());\n        const ageMatch = user.age >= minAge && user.age <= maxAge;\n        const genderMatch = filterGender ? user.gender.toLowerCase() === filterGender.toLowerCase() : true;\n        return nameMatch && ageMatch && genderMatch;\n    });\n\n    return (\n        <div className=\"user-list-container\">\n            <h1>Dashboard</h1>\n            <div className=\"filter-container\">\n                {/* Search users by name */}\n                <input \n                    type=\"text\"\n                    className=\"input-box\"\n                    placeholder=\"Search by name\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n\n                {/* Filter by Age Range */}\n                <div className=\"age-range-container\">\n                    <div className=\"age-range\">\n                        <label>Min Age:</label>\n                        <input \n                            type=\"number\" \n                            className=\"age-input\"\n                            min={MIN_AGE} \n                            max={MAX_AGE}\n                            value={minAge} \n                            onChange={(e) => setMinAge(Number(e.target.value))} \n                        />\n                    </div>\n                    <div className=\"age-range\">\n                        <label>Max Age:</label>\n                        <input \n                            type=\"number\" \n                            className=\"age-input\"\n                            min={MIN_AGE} \n                            max={MAX_AGE}\n                            value={maxAge} \n                            onChange={(e) => setMaxAge(Number(e.target.value))} \n                        />\n                    </div>\n                </div>\n\n                {/* Filter by gender */}\n                <div className=\"gender-filter\">\n                    <label>Gender:</label>\n                    <select\n                        className=\"dropdown\"\n                        value={filterGender}\n                        onChange={(e) => setFilterGender(e.target.value)}\n                    >\n                        <option value=\"\">All Genders</option>\n                        <option value=\"Male\">Male</option>\n                        <option value=\"Female\">Female</option>\n                    </select>\n                </div>\n            </div>\n\n            {/* Display filtered users */}\n            <ul className=\"user-list\">\n                {filteredUsers.length > 0 ? (\n                    filteredUsers.map(user => (\n                        <li key={user.id} className=\"user-item\">\n                            {user.name} - Age: {user.age} - Gender: {user.gender}\n                        </li>\n                    ))\n                ) : (\n                    <li>No users found</li>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default Dashboard;\n\n\n","import React, { useState } from 'react';\nimport { HashRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './Login';\nimport Dashboard from './Dashboard';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <Router>\n      <Routes>\n        {/* If not logged in, navigate to the Login page */}\n        <Route path=\"/Login\" element={<Login onLoginSuccess={handleLoginSuccess} />} />\n\n        {/* If logged in, navigate to the Dashboard */}\n        <Route path=\"/Dashboard\" element={isLoggedIn ? <Dashboard /> : <Navigate to=\"/Login\" />} />\n\n        {/* Redirect to login if the user tries to access the home route */}\n        <Route path=\"/\" element={<Navigate to={isLoggedIn ? \"/Dashboard\" : \"/Login\"} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}