{"version":3,"sources":["Login.tsx","UserList.tsx","Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Login","_ref","onLoginSuccess","username","setUsername","useState","password","setPassword","error","setError","navigate","useNavigate","React","createElement","className","onSubmit","event","preventDefault","type","value","onChange","e","target","required","users","id","name","age","gender","UserList","searchTerm","setSearchTerm","minAge","setMinAge","maxAge","setMaxAge","filterGender","setFilterGender","filteredUsers","filter","user","nameMatch","toLowerCase","includes","ageMatch","genderMatch","placeholder","min","max","Number","map","key","Dashboard","App","isLoggedIn","setIsLoggedIn","Router","Routes","Route","path","element","handleLoginSuccess","Navigate","to","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f92d4e77.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\n\ninterface LoginProps {\n  onLoginSuccess: () => void;\n}\n\nconst Login: React.FC<LoginProps> = ({ onLoginSuccess }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  \n  const navigate = useNavigate(); // Use React Router's navigation\n\n  // Mock credentials\n  const mockUsername = \"user\";\n  const mockPassword = \"pass\";\n\n  const handleLogin = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();  // Prevent page refresh\n\n    // Check if the credentials are valid\n    if (username === mockUsername && password === mockPassword) {\n      onLoginSuccess();  // Set login state in App component\n      setError('');\n      navigate('/dashboard');  // Navigate to the dashboard after successful login\n    } else {\n      setError('Invalid username or password');  // Show error message\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h2>Login Page</h2>\n      {error && <p className=\"error\">{error}</p>}\n      <form onSubmit={handleLogin}>\n        <div>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n\n","import React, { useState } from 'react';\n\n// Mock data for users\nconst users = [\n    { id: 1, name: 'Alice', age: 25, gender: 'Female' },\n    { id: 2, name: 'Bob', age: 30, gender: 'Male' },\n    { id: 3, name: 'Charlie', age: 35, gender: 'Male' }\n];\n\nconst MIN_AGE = 18;\nconst MAX_AGE = 70;\n\nconst UserList: React.FC = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [minAge, setMinAge] = useState(MIN_AGE);   // Minimum age for filtering\n    const [maxAge, setMaxAge] = useState(MAX_AGE); // Maximum age for filtering\n    const [filterGender, setFilterGender] = useState('');\n\n    // Filter users by both name and age range\n    const filteredUsers = users.filter(user => {\n        // Match name\n        const nameMatch = user.name.toLowerCase().includes(searchTerm.toLowerCase());\n\n        // Match age (if provided, filter by age)\n        const ageMatch = user.age >= minAge && user.age <= maxAge;\n\n        // Match gender (if selected, filter by gender)\n        const genderMatch = filterGender ? user.gender.toLowerCase() === filterGender.toLowerCase() : true;\n\n        // Return users that match all filters\n        return nameMatch && ageMatch && genderMatch;\n\n    });\n\n    return (\n        <div>\n            {/* Search users by name */}\n            <input \n                type=\"text\"\n                placeholder=\"Search users by name\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n            />\n\n            {/* Filter by Age Range */}\n            <div>\n                <label>Min Age: {minAge}</label>\n                <input \n                    type=\"number\" \n                    min={MIN_AGE} \n                    max={MAX_AGE}\n                    value={minAge} \n                    onChange={(e) => setMinAge(Number(e.target.value))} \n                />\n            </div>\n\n            <div>\n                <label>Max Age: {maxAge}</label>\n                <input \n                    type=\"number\" \n                    min={MIN_AGE} \n                    max={MAX_AGE}\n                    value={maxAge} \n                    onChange={(e) => setMaxAge(Number(e.target.value))} \n                />\n            </div>\n\n            {/* Filter by gender */}\n            <select\n                value={filterGender}\n                onChange={(e) => setFilterGender(e.target.value)}\n            >\n                <option value=\"\">All Genders</option>\n                <option value=\"Male\">Male</option>\n                <option value=\"Female\">Female</option>\n            </select>\n\n            {/* Display filtered users */}\n            <ul>\n                {filteredUsers.map(user => (\n                    <li key={user.id}>\n                        {user.name} - Age: {user.age} - Gender: {user.gender}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default UserList;\n","import React from 'react';\nimport UserList from './UserList';\n\nconst Dashboard: React.FC = () => {\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      <p>Welcome to your dashboard!</p>\n      <UserList />\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './Login';\nimport Dashboard from './Dashboard';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <Router>\n      <Routes>\n        {/* If not logged in, navigate to the Login page */}\n        <Route path=\"/Login\" element={<Login onLoginSuccess={handleLoginSuccess} />} />\n\n        {/* If logged in, navigate to the Dashboard */}\n        <Route path=\"/Dashboard\" element={isLoggedIn ? <Dashboard /> : <Navigate to=\"/Login\" />} />\n\n        {/* Redirect to login if the user tries to access the home route */}\n        <Route path=\"/\" element={<Navigate to={isLoggedIn ? \"/Dashboard\" : \"/Login\"} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}